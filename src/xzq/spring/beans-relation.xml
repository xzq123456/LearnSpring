<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--大部分属性一样  bean 配置的继承 也可以覆盖父类的属性-->
    <!--抽象bean 不可以实例化bean abstract="true" 抽象的话可以不用class -->
    <bean id="address" class="xzq.spring.Autowire.Address" p:city="Beijing" p:street="Wudaokou" abstract="true"></bean>
    <!--<bean id="address2" class="xzq.spring.Autowire.Address" p:city="Beijing" p:street="Zhongguancun"></bean>-->
    <bean id="address2" p:street="Hzongguancun"  parent="address"></bean>

  <!--要求在配置person时必须要有一个关联的car  person 依赖于car-->
    <bean id="car" class="xzq.spring.Autowire.Car" >
        <property name="brand" value="BMW"></property>
        <property name="price" value="222222"></property>
     </bean>
    <bean id="person" class="xzq.spring.Autowire.Person" p:name="xzqq" p:address-ref="address2" depends-on="car"></bean>


</beans>